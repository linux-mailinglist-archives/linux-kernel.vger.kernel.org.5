Return-Path: <linux-kernel+bounces-123959-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 4A4AD891056
	for <lists+linux-kernel@lfdr.de>; Fri, 29 Mar 2024 02:29:18 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id BE87C28A9B3
	for <lists+linux-kernel@lfdr.de>; Fri, 29 Mar 2024 01:29:16 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 74A7C1CFB6;
	Fri, 29 Mar 2024 01:29:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="uarB6bWI"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id BA37B182A1;
	Fri, 29 Mar 2024 01:29:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1711675743; cv=none; b=VQ/weNAJLjbdVCjANyedsUhHKw3/18qG+mqJrD4NnOjZE/lzNvkzfUGa1nI+54qJj65XfbFDrctv2wMaLuGcexicHkkrGSlxKP9xT6/qKo3QPRZumLNNMLYa1Up8usPV71N8LiBfRwFAC5r94EXMPS50gbfL7yjmtdin2KsamAA=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1711675743; c=relaxed/simple;
	bh=A8XVNU5tjkFScbnqgLogq2C++BER6iz0Fw152LIGcRU=;
	h=From:To:Cc:In-Reply-To:References:Subject:Message-Id:Date:
	 MIME-Version:Content-Type; b=H55rxsGWB723ZorOG2uD7ucJ33REwa+ninNPGKtZlKD547oxdVbwzlnYvaABzcqRDWPl36loyEFMYI1DXzDoSXo1237yeSymbk1fDo6ApmHNik2WddZn+X8d6CuWYnqus2ky9B2lVRcElG9hXCHN2phvQN/6A8z24YJQEyu/3Z8=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=uarB6bWI; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id BC0F1C43399;
	Fri, 29 Mar 2024 01:29:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1711675743;
	bh=A8XVNU5tjkFScbnqgLogq2C++BER6iz0Fw152LIGcRU=;
	h=From:To:Cc:In-Reply-To:References:Subject:Date:From;
	b=uarB6bWIX0PrFPujb/dU6GFQ2yHuHWMNnqHzumIvmTvTgCpHVcxrIBoFl+6iL6IlD
	 8+33RhSWTImfuMse+S6CLJ0SNMS5FcdPE+mAr07797alIIM6awPCPnkCAw4KzJM3wS
	 NjiaxJQxn7hd0byKDvSv+t1L8Up3AbnbyJwYb+YmaOc6ghi40E7HT3H8+pY+/1Czcp
	 rhcvIGhcobTwcmMKzsixctn1cDdv2tK1SBy6QviMG1fFMICN3QAO2gQCyRN3Th3Z3+
	 jHQprQ8/6IjzlpvMseTUMrLTp3q9JLBQrbBb0P+SpF3t0Ys33Kblj3gno20hqW/KB4
	 xj/HyDHPtMUcw==
From: Mark Brown <broonie@kernel.org>
To: lgirdwood@gmail.com, perex@perex.cz, tiwai@suse.com, 
 Stephen Lee <slee08177@gmail.com>
Cc: alsa-devel@alsa-project.org, linux-kernel@vger.kernel.org, 
 linux-sound@vger.kernel.org, roman.gushchin@linux.dev, dennis@kernel.org
In-Reply-To: <20240326010131.6211-1-slee08177@gmail.com>
References: <20240326010131.6211-1-slee08177@gmail.com>
Subject: Re: [PATCH] ASoC: ops: Fix wraparound for mask in
 snd_soc_get_volsw
Message-Id: <171167574149.187137.12642574967939100311.b4-ty@kernel.org>
Date: Fri, 29 Mar 2024 01:29:01 +0000
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
X-Mailer: b4 0.14-dev

On Mon, 25 Mar 2024 18:01:31 -0700, Stephen Lee wrote:
> In snd_soc_info_volsw(), mask is generated by figuring out the index of
> the most significant bit set in max and converting the index to a
> bitmask through bit shift 1. Unintended wraparound occurs when max is an
> integer value with msb bit set. Since the bit shift value 1 is treated
> as an integer type, the left shift operation will wraparound and set
> mask to 0 instead of all 1's. In order to fix this, we type cast 1 as
> `1ULL` to prevent the wraparound.
> 
> [...]

Applied to

   https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git for-next

Thanks!

[1/1] ASoC: ops: Fix wraparound for mask in snd_soc_get_volsw
      commit: fc563aa900659a850e2ada4af26b9d7a3de6c591

All being well this means that it will be integrated into the linux-next
tree (usually sometime in the next 24 hours) and sent to Linus during
the next merge window (or sooner if it is a bug fix), however if
problems are discovered then the patch may be dropped or reverted.

You may get further e-mails resulting from automated or manual testing
and review of the tree, please engage with people reporting problems and
send followup patches addressing any issues that are reported if needed.

If any updates are required or you are submitting further changes they
should be sent as incremental updates against current git, existing
patches will not be replaced.

Please add any relevant lists and maintainers to the CCs when replying
to this mail.

Thanks,
Mark



Return-Path: <linux-kernel+bounces-127943-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [139.178.88.99])
	by mail.lfdr.de (Postfix) with ESMTPS id D15FB895317
	for <lists+linux-kernel@lfdr.de>; Tue,  2 Apr 2024 14:36:01 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 87012285387
	for <lists+linux-kernel@lfdr.de>; Tue,  2 Apr 2024 12:36:00 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id B731F58AB0;
	Tue,  2 Apr 2024 12:35:43 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="NQp6/uke"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E5378634E5
	for <linux-kernel@vger.kernel.org>; Tue,  2 Apr 2024 12:35:42 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1712061343; cv=none; b=pzhIlZtLkOO6b2eDVv+axS49tJvCLM7Q0GV8QJv8plqF1RaiMi/TsYedlPPbHMq6GSKu2z633yKPX0snudLVp9Ufo/43CZzb4OTyU9yEaNggW+dTfK8koiX5fmEbRCjucRJVRXEIZ9FphL6rxOcZhr2/vNSGP38UZ48wZD/KXak=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1712061343; c=relaxed/simple;
	bh=7+z6FHMMk9EWFQfppPVQiC+yP/sYKpg6rT2yPxQXsKQ=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=CjZ8SkbwI9aAbXdgMwNCV/0ZlfEALlpJr4rEBdenTsONU0SEWCltLkPioKm2qKTtEkh0xUVDcpi/+tvwPXcxEYUToflK8709BvHDm5OQA9vmeipOsANvQiRwoWQZ1bfdxj1dQNFO54Nvj11RgEdupSV5186vixxZ+o91iQYLPYY=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=NQp6/uke; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 5DB33C433C7;
	Tue,  2 Apr 2024 12:35:42 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1712061342;
	bh=7+z6FHMMk9EWFQfppPVQiC+yP/sYKpg6rT2yPxQXsKQ=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=NQp6/uke1jwfqfrQTJZGOj++7cB1q1V44B1/1HjkdR9up+FY9tvfjK6s2fjHtiQbt
	 p6SzLzIyCwNtRL5WRYDC2vvL/B6XArhRUcTvrvTPumMCTr6m/GQQmzFY6zi1tDVdCQ
	 i5ZH6Oz0jvTecofvowm4+JYf2o/EdM1y+IbUYHilLEr9JbqOSrOyKqW2Yg1x4LIFQS
	 HI6Pd4DwRfQLrD7Zu/6ijZUOdb7P95FEeg6k1N6FHxgB8sq/rJCfgVRtaxy4Elc77S
	 Kjuy+C5lMlFxkZ9si9edMbA+UuC0xj0etWgOglft3wI6DU2ehLAaoYm9RLmQwOQlVm
	 6v1Ln4XZ7mgrw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1rrdMZ-000hgr-LY;
	Tue, 02 Apr 2024 13:35:39 +0100
Date: Tue, 02 Apr 2024 13:35:35 +0100
Message-ID: <86jzlgt014.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: t00849498 <tangnianyao@huawei.com>
Cc: <tglx@linutronix.de>,
	<linux-arm-kernel@lists.infradead.org>,
	<linux-kernel@vger.kernel.org>,
	<guoyang2@huawei.com>,
	<wangwudi@hisilicon.com>
Subject: Re: [PATCH] irqchip/gic-v3-its: Don't need VSYNC if VMAPP with {V, Alloc}=={0, x}
In-Reply-To: <20240402114147.3788881-1-tangnianyao@huawei.com>
References: <20240402114147.3788881-1-tangnianyao@huawei.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.2
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: tangnianyao@huawei.com, tglx@linutronix.de, linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org, guoyang2@huawei.com, wangwudi@hisilicon.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Tue, 02 Apr 2024 12:41:47 +0100,
t00849498 <tangnianyao@huawei.com> wrote:
> 
> From GIC spec, a VMAPP with {V, Alloc}=={0, x} is self-synchronizing,

It'd be nice to quote the part of the spec (5.3.19).

> This means the ITS command queue does not show the command as
> consumed until all of its effects are completed. A VSYNC with unmapped
> vpeid is not needed.
> 
> Signed-off-by: t00849498 <tangnianyao@huawei.com>

Previous contributions with the same email address had the name
"Nianyao Tang" associated with it. Was it wrong in the past? Or is the
above wrong?

> ---
>  drivers/irqchip/irq-gic-v3-its.c | 4 ++++
>  1 file changed, 4 insertions(+)
> 
> diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
> index fca888b36680..a0ca5dcbb245 100644
> --- a/drivers/irqchip/irq-gic-v3-its.c
> +++ b/drivers/irqchip/irq-gic-v3-its.c
> @@ -789,6 +789,7 @@ static struct its_vpe *its_build_vmapp_cmd(struct its_node *its,
>  	unsigned long vpt_addr, vconf_addr;
>  	u64 target;
>  	bool alloc;
> +	bool unmap_v4_1 = !desc->its_vmapp_cmd.valid && is_v4_1(its);
>
>  	its_encode_cmd(cmd, GITS_CMD_VMAPP);
>  	its_encode_vpeid(cmd, desc->its_vmapp_cmd.vpe->vpe_id);
> @@ -832,6 +833,9 @@ static struct its_vpe *its_build_vmapp_cmd(struct its_node *its,
>  out:
>  	its_fixup_cmd(cmd);
>  
> +	if (unmap_v4_1)
> +		return NULL;
> +
>  	return valid_vpe(its, desc->its_vmapp_cmd.vpe);
>  }
>  

This is a bit ugly. We already have a whole block dedicated to
handling VMAPP with V=0 and GICv4.1, and it'd be more readable to keep
all that code together. Something like the untested patch below.

Thanks,

	M.

diff --git a/drivers/irqchip/irq-gic-v3-its.c b/drivers/irqchip/irq-gic-v3-its.c
index fca888b36680..2a537cbfcb07 100644
--- a/drivers/irqchip/irq-gic-v3-its.c
+++ b/drivers/irqchip/irq-gic-v3-its.c
@@ -786,6 +786,7 @@ static struct its_vpe *its_build_vmapp_cmd(struct its_node *its,
 					   struct its_cmd_block *cmd,
 					   struct its_cmd_desc *desc)
 {
+	struct its_vpe *vpe = valid_vpe(its, desc->its_vmapp_cmd.vpe);
 	unsigned long vpt_addr, vconf_addr;
 	u64 target;
 	bool alloc;
@@ -798,6 +799,11 @@ static struct its_vpe *its_build_vmapp_cmd(struct its_node *its,
 		if (is_v4_1(its)) {
 			alloc = !atomic_dec_return(&desc->its_vmapp_cmd.vpe->vmapp_count);
 			its_encode_alloc(cmd, alloc);
+			/*
+			 * Unmapping a VPE is self-synchronizing on GICv4.1,
+			 * no need to issue a VSYNC.
+			 */
+			vpe = NULL;
 		}
 
 		goto out;
@@ -832,7 +838,7 @@ static struct its_vpe *its_build_vmapp_cmd(struct its_node *its,
 out:
 	its_fixup_cmd(cmd);
 
-	return valid_vpe(its, desc->its_vmapp_cmd.vpe);
+	return vpe;
 }
 
 static struct its_vpe *its_build_vmapti_cmd(struct its_node *its,

-- 
Without deviation from the norm, progress is not possible.


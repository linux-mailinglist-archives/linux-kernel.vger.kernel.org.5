Return-Path: <linux-kernel+bounces-146485-lists+linux-kernel=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [147.75.80.249])
	by mail.lfdr.de (Postfix) with ESMTPS id 601728A65E0
	for <lists+linux-kernel@lfdr.de>; Tue, 16 Apr 2024 10:16:05 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 1682F1F245BB
	for <lists+linux-kernel@lfdr.de>; Tue, 16 Apr 2024 08:16:05 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 35BBB139589;
	Tue, 16 Apr 2024 08:15:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="PyLqi3OR"
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6FDE71E51F;
	Tue, 16 Apr 2024 08:15:58 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1713255358; cv=none; b=RPVhIC9MGQ/4Dy9XiHJdJVwkwKlXMGuqN3ofDXVtTizO62UpSyC18GlnGm6Zs1h9doI/HosdK53r+v5ewHHvp210YhVa7kL4nrwF0/uOjZ8PWuouSESZrGzLfV1b9k0Mchtft6QudlTskhbwWcB/WdLbxBODM2pS8IMxc18D6O0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1713255358; c=relaxed/simple;
	bh=fMhAsf9mgb8CCtvxhuFDJaA1LT0nBnJDpc/Az6EZ/Ts=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=JhpyhS9jh5SFGbkVeE3SMNYQ3EBw4gdr5vubVxeNFe3sv5rPgPgl0sPODYGhvcl/oVRPNT0llKFeIvJ/gq5lkaY9z8SRW5jhEMh/TBvCJ7i/bm1DsbDcrexHY+quiaj4O4xPBNBVg+s8jVHzVJEmd5qchNtpYJxfA/CbmfYEt4Y=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=PyLqi3OR; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id E4EA6C113CE;
	Tue, 16 Apr 2024 08:15:57 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1713255358;
	bh=fMhAsf9mgb8CCtvxhuFDJaA1LT0nBnJDpc/Az6EZ/Ts=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=PyLqi3ORuxNZ6gL32MU/u7qfsQsIPUowtjrTnXc9jBUZL/f+5xXx7Zj2ofs8ZVSbO
	 JxGnTx5CNoZ9j4UNMX89xQR63d8xUPaCXb8epnzfA5tLcFwsBOpf0x4i5AFefXhPVP
	 QXIMri2LvTBVSmyfYBOQgMJOxa6Cqws0dwhyMxhI7hDQ8B4iwkr8geG2ZLHHfM3uFR
	 QI6ISp7A5mUPbLw8LQr3gtQYLgP1paTP6poOxs57W4HtMoMMGHleSNNL2l6KCYOdNj
	 z+kuI/V04POffpc2ECL7ygtKNf0wXCD9Nzk9Qg9cxV1ZdOWNeqO+U3a0LlJbMzQIna
	 GpJ9NENd6mllQ==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1rwdyt-004vY1-HS;
	Tue, 16 Apr 2024 09:15:55 +0100
Date: Tue, 16 Apr 2024 09:15:54 +0100
Message-ID: <864jc1soxx.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Anshuman Khandual <anshuman.khandual@arm.com>
Cc: linux-arm-kernel@lists.infradead.org,
	Jonathan Corbet <corbet@lwn.net>,
	Oliver Upton <oliver.upton@linux.dev>,
	James Morse <james.morse@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Catalin Marinas <catalin.marinas@arm.com>,
	Will Deacon <will@kernel.org>,
	Mark Brown <broonie@kernel.org>,
	Mark Rutland <mark.rutland@arm.com>,
	kvmarm@lists.linux.dev,
	linux-kernel@vger.kernel.org
Subject: Re: [RFC 5/8] KVM: arm64: Explicitly handle MDSELR_EL1 traps as UNDEFINED
In-Reply-To: <58cdb927-a2d9-4af4-900f-2132472afe9f@arm.com>
References: <20240405080008.1225223-1-anshuman.khandual@arm.com>
	<20240405080008.1225223-6-anshuman.khandual@arm.com>
	<86a5m8t8s6.wl-maz@kernel.org>
	<5a2a74b3-f6cd-4cb6-8ee8-5dd7dc2bd686@arm.com>
	<86mspysuw8.wl-maz@kernel.org>
	<58cdb927-a2d9-4af4-900f-2132472afe9f@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.2
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: anshuman.khandual@arm.com, linux-arm-kernel@lists.infradead.org, corbet@lwn.net, oliver.upton@linux.dev, james.morse@arm.com, suzuki.poulose@arm.com, catalin.marinas@arm.com, will@kernel.org, broonie@kernel.org, mark.rutland@arm.com, kvmarm@lists.linux.dev, linux-kernel@vger.kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Tue, 16 Apr 2024 06:46:13 +0100,
Anshuman Khandual <anshuman.khandual@arm.com> wrote:
> 
> On 4/12/24 16:35, Marc Zyngier wrote:
> > kvm_init_nv_sysregs() to ensure that these new registers have the
> > correct RES0/RES1 behaviour depending on the supported feature set for
> > the guest.
> 
> Following might be sufficient for MDSELR_EL1, but wondering if these fine
> grained control registers (HDFG[RW]TR2_EL2) need to be completely defined
> for the entire guest feature set, probably required.

Yes, you should check for all features defining a valid bit in these
registers, and apply the correct mask if the feature isn't advertised
to the guest, even if KVM doesn't currently support the feature at
all. This is a bit cumbersome at first, but we don't have to revisit
it when the feature gets enabled, which is a massive maintainability
improvement.

It also means that we just have to read the documentation and match it
against the code, which should be pretty trivial.

> 
>        /* HDFG[RW]TR2_EL2 */
>        res0 = res1 = 0;
>        if (!kvm_has_feat(kvm, ID_AA64DFR0_EL1, DebugVer, V8P9))
>                res0 |= HDFGRTR2_EL2_nMDSELR_EL1;
>        set_sysreg_masks(kvm, HDFGRTR2_EL2, res0 | HDFGRTR2_EL2_RES0, res1);
>        set_sysreg_masks(kvm, HDFGWTR2_EL2, res0 | HDFGWTR2_EL2_RES0, res1);

Yup, this looks sensible for that particular bit. A few more to
go... ;-)

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.


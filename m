Return-Path: <linux-kernel-owner@vger.kernel.org>
X-Original-To: lists+linux-kernel@lfdr.de
Delivered-To: lists+linux-kernel@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 132D67BE2B7
	for <lists+linux-kernel@lfdr.de>; Mon,  9 Oct 2023 16:27:27 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1377026AbjJIO1W (ORCPT <rfc822;lists+linux-kernel@lfdr.de>);
        Mon, 9 Oct 2023 10:27:22 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:55880 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1376996AbjJIO1T (ORCPT
        <rfc822;linux-kernel@vger.kernel.org>);
        Mon, 9 Oct 2023 10:27:19 -0400
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 5CDE3AB
        for <linux-kernel@vger.kernel.org>; Mon,  9 Oct 2023 07:27:18 -0700 (PDT)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 66577C433C7;
        Mon,  9 Oct 2023 14:27:16 +0000 (UTC)
Date:   Mon, 9 Oct 2023 10:28:33 -0400
From:   Steven Rostedt <rostedt@goodmis.org>
To:     Yajun Deng <yajun.deng@linux.dev>
Cc:     Eric Dumazet <edumazet@google.com>, mhiramat@kernel.org,
        dennis@kernel.org, tj@kernel.org, cl@linux.com,
        mark.rutland@arm.com, davem@davemloft.net, kuba@kernel.org,
        pabeni@redhat.com, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org,
        Alexander Lobakin <aleksander.lobakin@intel.com>,
        linux-trace-kernel@vger.kernel.org, linux-mm@kvack.org
Subject: Re: [PATCH net-next v7] net/core: Introduce netdev_core_stats_inc()
Message-ID: <20231009102833.1b0d35e3@gandalf.local.home>
In-Reply-To: <078f662d-a73f-766b-3a07-c82cd37026c5@linux.dev>
References: <20231007050621.1706331-1-yajun.deng@linux.dev>
        <CANn89i+navyRe8-AV=ehM3qFce2hmnOEKBqvK5Xnev7KTaS5Lg@mail.gmail.com>
        <a53a3ff6-8c66-07c4-0163-e582d88843dd@linux.dev>
        <CANn89i+u5dXdYm_0_LwhXg5Nw+gHXx+nPUmbYhvT=k9P4+9JRQ@mail.gmail.com>
        <9f4fb613-d63f-9b86-fe92-11bf4dfb7275@linux.dev>
        <CANn89iK7bvQtGD=p+fHaWiiaNn=u8vWrt0YQ26pGQY=kZTdfJw@mail.gmail.com>
        <4a747fda-2bb9-4231-66d6-31306184eec2@linux.dev>
        <814b5598-5284-9558-8f56-12a6f7a67187@linux.dev>
        <CANn89iJCTgWTu0mzwj-8_-HiWm4uErY=VASDHoYaod9Nq-ayPA@mail.gmail.com>
        <508b33f7-3dc0-4536-21f6-4a5e7ade2b5c@linux.dev>
        <CANn89i+r-pQGpen1mUhybmj+6ybhxSsuoaB07NFzOWyHUMFDNw@mail.gmail.com>
        <296ca17d-cff0-2d19-f620-eedab004ddde@linux.dev>
        <CANn89iL=W3fyuH_KawfhKvLyw2Cw=qhHbEZtbKgQEYhHJChy3Q@mail.gmail.com>
        <68eb65c5-1870-0776-0878-694a8b002a6d@linux.dev>
        <CANn89iJHtYJjp6zPc2PVLAWuN88BQc5OntjrAf7f6QOcqP+B=g@mail.gmail.com>
        <078f662d-a73f-766b-3a07-c82cd37026c5@linux.dev>
X-Mailer: Claws Mail 3.19.1 (GTK+ 2.24.33; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Spam-Status: No, score=-4.0 required=5.0 tests=BAYES_00,
        HEADER_FROM_DIFFERENT_DOMAINS,RCVD_IN_DNSWL_MED,SPF_HELO_NONE,SPF_PASS
        autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kernel.vger.kernel.org>
X-Mailing-List: linux-kernel@vger.kernel.org

On Mon, 9 Oct 2023 18:58:27 +0800
Yajun Deng <yajun.deng@linux.dev> wrote:

> > C compiler decides to inline or not, depending on various factors.
> >
> > The most efficient (and small) code is generated by this_cpu_inc()
> > version, allowing the compiler to inline it.
> >
> > If you copy/paste this_cpu_inc()  twenty times, then the compiler
> > would  not inline the function anymore.  

Yes, if you want something to be visible by ftrace, it must not be inlined
(as inlined functions are not function calls by definition). And as Eric
stated, the compiler is perfectly allowed to inline something if it
believes it will be more efficient. i.e. There may be code around the function
call that could be more efficient if it wasn't change to parameters. If you
want to make sure a function stays out of line, you must explicitly tell
the compiler you want the function not to ever be inlined (hence the
"noinline" attribute).

> 
> 
> Got it. Thank you.

Great.

-- Steve
